branches:
  only:
  - master

group: deprecated-2017Q4

filter_secrets: false

os:
- linux

language: generic

env:
  matrix:
    - PY=2.7 NUMPY=1.14
    - PY=3.6 NUMPY=1.14

addons:
  apt:
    update: true
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gfortran
    - libblas-dev
    - liblapack-dev
    - libopenmpi-dev
    - openmpi-bin
    ssh_known_hosts:
    - web543.webfaction.com

cache:
  apt: true
  directories:
    - $HOME/.cache/pip
    - $HOME/miniconda
    - $HOME/pyoptsparse/pyoptsparse/pySNOPT

before_install:
- if [ -f $HOME/miniconda/bin/python$PY ]; then
    echo "cached miniconda found -- nothing to do";
  else
    NOT_CACHED_CONDA=1;
    rm -rf $HOME/miniconda;
  fi


- if [ -f $HOME/.cache/pip ]; then
    echo "cached pip found -- nothing to do";
  else
    NOT_CACHED_PIP=1;
    rm -rf $HOME/.cache/pip;
  fi

- if [ -f $HOME/miniconda/lib/python$PY/site-packages/pyoptsparse/pyoptsparse/pySNOPT/source/snoptc.f ]; then
    echo "cached SNOPT source found -- nothing to do";
  else
    NOT_CACHED_SNOPT=1;
    rm -rf $HOME/miniconda/lib/python$PY/site-packages/pyoptsparse/pyoptsparse/pySNOPT ;
  fi

install:
- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    openssl aes-256-cbc -K $encrypted_5ebcf5cee077_key -iv $encrypted_5ebcf5cee077_iv -in travis_deploy_rsa.enc -out /tmp/travis_deploy_rsa -d;
    eval "$(ssh-agent -s)";
    chmod 600 /tmp/travis_deploy_rsa;
    ssh-add /tmp/travis_deploy_rsa;
    echo -e "Host web543.webfaction.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config;
  fi

- if [ "$NOT_CACHED_CONDA" ]; then
    wget "https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh" -O miniconda.sh;
    chmod +x miniconda.sh;
    ./miniconda.sh -b  -p $HOME/miniconda;
    export PATH=$HOME/miniconda/bin:$PATH;
    conda install --yes python=$PY;
    conda install --yes numpy==$NUMPY scipy=0.19.1 swig pip;
  else
    export PATH=$HOME/miniconda/bin:$PATH;
  fi

- if [ "$NOT_CACHED_PIP" ]; then
    pip install --upgrade pip;
    pip install mpi4py;
    pip install git+https://github.com/OpenMDAO/testflo.git;
    pip install coverage;
    pip install git+https://github.com/swryan/coveralls-python@work;
  fi

- if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
    if [ "NOT_CACHED_SNOPT" ]; then
      cd pyoptsparse/pySNOPT;
      scp -r "$SNOPT_LOCATION" .;
      cd ../..;
    fi
  fi

- python setup.py build;
- python setup.py install;

# display summary of installed packages and their versions
- conda list;
- pip list;

script:
# run the tests from down here to see if it can work without being at top level
# only do coverage on the upload machine.
- cd test; #coverage from root directory does not work.
- testflo -v --pre_announce --coverage  --coverpkg pyoptsparse
# --cover-omit \*build/\* --cover-omit \*doc/\* --cover-omit \*examples/\*  --cover-omit \*postprocessing/\* --cover-omit \*test/\* ;
# - testflo -v --pre_announce;

after_success:
- coveralls --rcfile=.coveragerc --output=coveralls.json;
- sed 's/\/home\/travis\/miniconda\/lib\/python'"$PY"'\/site-packages\///g' < coveralls.json > coveralls-upd.json;
- coveralls --upload=coveralls-upd.json;
